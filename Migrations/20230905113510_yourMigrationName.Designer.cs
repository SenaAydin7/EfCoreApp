// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using efcoreApp.Data;

#nullable disable

namespace efcoreApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230905113510_yourMigrationName")]
    partial class yourMigrationName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("efcoreApp.Data.Cars", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CarImage")
                        .HasColumnType("TEXT");

                    b.Property<string>("CarModel")
                        .HasColumnType("TEXT");

                    b.Property<string>("CarName")
                        .HasColumnType("TEXT");

                    b.Property<string>("CarPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("CarId");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("efcoreApp.Data.Owner", b =>
                {
                    b.Property<int>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("OwnerId");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("efcoreApp.Data.ShopReg", b =>
                {
                    b.Property<int>("ShopRegId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ShopId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ShopRegId");

                    b.HasIndex("CarId");

                    b.HasIndex("ShopId");

                    b.ToTable("ShopReg");
                });

            modelBuilder.Entity("efcoreApp.Data.Shops", b =>
                {
                    b.Property<int>("ShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("ShopId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("efcoreApp.Data.ShopReg", b =>
                {
                    b.HasOne("efcoreApp.Data.Cars", "Car")
                        .WithMany("ShopReg")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("efcoreApp.Data.Shops", "Shop")
                        .WithMany("ShopReg")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("efcoreApp.Data.Shops", b =>
                {
                    b.HasOne("efcoreApp.Data.Owner", "Owner")
                        .WithMany("Shops")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("efcoreApp.Data.Cars", b =>
                {
                    b.Navigation("ShopReg");
                });

            modelBuilder.Entity("efcoreApp.Data.Owner", b =>
                {
                    b.Navigation("Shops");
                });

            modelBuilder.Entity("efcoreApp.Data.Shops", b =>
                {
                    b.Navigation("ShopReg");
                });
#pragma warning restore 612, 618
        }
    }
}
